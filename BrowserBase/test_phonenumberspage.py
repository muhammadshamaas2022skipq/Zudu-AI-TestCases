# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support import expected_conditions as EC

class TestPhonenumberspage():
  def __init__(self, driver):
    self.driver = driver
    self.vars = {}

  def setup_method(self, method):
    pass  

  def teardown_method(self, method):
    pass
  
  def test_phonenumberspage(self):
    self.driver.get("https://app.uat.zudu.ai/")
    self.driver.set_window_size(1300, 736)
    self.driver.execute_script("document.body.style.zoom='0.5'")

    def click_element(by, value, sleep_time=1):
        from selenium.common.exceptions import TimeoutException
        try:
          element = WebDriverWait(self.driver, 10).until(
              EC.element_to_be_clickable((by, value))
          )
          self.driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", element)
          if element and element.is_displayed() and element.is_enabled():
            size = element.size
            if size['width'] > 0 and size['height'] > 0:
              print(element)
              try:
                element.click()
              except Exception as e:
                print(f"Click intercepted, trying JS click: {e}")
                #self.driver.execute_script("arguments[0].click();", element)
            else:
              print(f"Element found but has zero size: {element}")
          else:
            print(f"Element found but not interactable: {element}")
          time.sleep(5)
        except TimeoutException:
          print(f"Timeout: Element by {by} with value '{value}' not clickable after waiting.")
        except Exception as e:
          print(f'Error finding or clicking element by {by} with value "{value}": {e}')

    def send_keys(by,value,keys):
      try:
          input_elem = WebDriverWait(self.driver, 10).until(
              EC.element_to_be_clickable((by, value))
          )
          input_elem.send_keys(keys)
      except Exception as e:
          print(f"Could not find or interact with input: {e}")
  
    # Open page
    click_element(By.CSS_SELECTOR, "li:nth-child(6) span")

    # Click first row 
    click_element(By.CSS_SELECTOR, ".border-t:nth-child(1) > .pl-6:nth-child(1) > .text-\\[\\#0F0F10\\]")

    # Select agent
    click_element(By.XPATH, "//button[@role='combobox']")
    click_element(By.XPATH, "//div[@role='listbox']//div[@role='option'][1] | //div[contains(@class, 'radix-select-content')]//div[@role='option'][1]")

    # Click call button
    click_element(By.XPATH, "//button[contains(., 'Outbound Call')]")
    time.sleep(5)

    # Fill form
    click_element(By.XPATH, "//button[@role='combobox' and .//span[text()='Select an agent']]")
    click_element(By.XPATH, "//div[@role='listbox']//div[@role='option'][1] | //div[contains(@class, 'radix-select-content')]//div[@role='option'][1]")
    click_element(By.ID, "phone-number")
    input_elem = WebDriverWait(self.driver, 10).until(
      EC.element_to_be_clickable((By.ID, "phone-number"))
    )
    input_elem.clear()
    input_elem.send_keys("+918035739477")
    click_element(By.CSS_SELECTOR,".hover\\3A bg-gray-800")
  
